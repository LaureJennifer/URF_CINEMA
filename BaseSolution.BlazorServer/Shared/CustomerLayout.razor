
@using BaseSolution.Application.DataTransferObjects.Department
@using BaseSolution.Application.DataTransferObjects.Department.Request
@using BaseSolution.Application.DataTransferObjects.User
@using BaseSolution.BlazorServer.Components.Login
@using BaseSolution.BlazorServer.Pages.Film
@using BaseSolution.BlazorServer.Repositories.Interfaces
@using BaseSolution.Domain.Enums
@using BaseSolution.Infrastructure.Extensions
﻿@using BlazorServer.Data.Extensions;
@inherits LayoutComponentBase
@inject IDialogService DialogService
@inject NavigationManager _navigationManager;
@inject EntityStatusExtensions _entityStatusExtensions
@inject SaveCustomerId saveCustomerId;
@inject AuthenticationStateProvider _authProvider;

<MudThemeProvider/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Style="background-color:#03213B">
        <MudGrid>
            <MudItem xs="3" md="3" lg="3">
                <MudText Class="mt-4" Style="color:#f2ffff" Typo="Typo.h6">URF CENIMAS</MudText>
            </MudItem>
            <MudItem xs="1" md="1" lg="1">
                <MudText @onclick="()=>Onclick()" Class="mt-4" Style="color:#f2ffff" Typo="Typo.h6">Phim</MudText>
            </MudItem>
            <MudItem xs="2" md="2" lg="2">
                <MudText Class="mt-4" Href="/FilmSchedule" Typo="Typo.h6">Lịch chiếu</MudText>
            </MudItem>
            @*  <MudItem xs="2" md="2" lg="2" >
                <MudSelect Class="mb-4" Dense="true" T="string" @bind-Value="SelectedValue" Label="Rạp URF" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@_entityStatusExtensions.ConvertForCountry(EntityCountry.VN)" />
                    <MudSelectItem Value="@_entityStatusExtensions.ConvertForCountry(EntityCountry.CN)" />
                    <MudSelectItem Value="@_entityStatusExtensions.ConvertForCountry(EntityCountry.CA)" />
                    <MudSelectItem Value="@_entityStatusExtensions.ConvertForCountry(EntityCountry.DE)" />
                    <MudSelectItem Value="@_entityStatusExtensions.ConvertForCountry(EntityCountry.SG)" />
                    <MudSelectItem Value="@_entityStatusExtensions.ConvertForCountry(EntityCountry.US)" />
                </MudSelect>
            </MudItem> *@
            
            <MudItem xs="3" md="3" lg="3">
                <MudSelect T="string" Label="Rạp" Value="SelectedDepartment" ValueChanged="OnSelectedDepartment">
            @if(_lstDepartment == null)
            {
                
            }
            else
            {
                @if (_lstDepartment.Count<=0)
                {
                    <MudAlert Severity="Severity.Warning">Không có dữ liệu</MudAlert>
                }
                else
                {
                    @foreach (var department in _lstDepartment)
                    {
                        <MudSelectItem T="string" Value="@(department.Id.ToString())">@department.Name</MudSelectItem>
                    }    
                }
                
            }
                          
                </MudSelect>
                
                      
            </MudItem>
           
                <AuthorizeView>
                    <Authorized>
                    <MudItem xs="2" md="2" lg="2">
                        <MudLink Color="Color.Error" Href="/logout"><MudIconButton Icon="@Icons.Material.Filled.PersonPin" Color="Color.Error">Đăng xuất</MudIconButton></MudLink>
                    </MudItem>
                    </Authorized>
                    <NotAuthorized>
                        <MudItem xs="1" md="1" lg="1">

                        <MudLink Href="/login"><MudIconButton Icon="@Icons.Material.Filled.PersonPin" Color="Color.Success">Đăng nhập</MudIconButton></MudLink>
                        
                        </MudItem>
                    </NotAuthorized>
                </AuthorizeView>
                 </MudGrid>
       
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
    <Footer/>
    <MudScrollToTop>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.KeyboardArrowUp" />
    </MudScrollToTop>
</MudLayout>

@code {

    [Inject] public IDepartmentRepo _departmentRepo { get; set; }

    [Inject]
    public IUserRepo _userRepo{ get; set; }

    [Parameter]
    public Guid IdUser{ get; set; }

    List<DepartmentDto>? _lstDepartment { get; set; }
    UserDto _userDto = new();
    ViewDepartmentWithPaginationRequest _request = new(){PageSize=50};
    public string SelectedDepartment { get; set; }
    public string SelectedValue{ get; set; }
    public string Search { get; set; }
    bool _drawerOpen = true;
    private async Task LoadDepartmentForSelect()
    {
        var result = await _departmentRepo.GetAllActive(_request);
        _lstDepartment = result.Data.Data.ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadDepartmentForSelect();

        // await LoadData();
    }

    async Task LoadData()
    {
        var result = await _userRepo.GetByIdAsync(IdUser);
        _userDto = result.Data!;
    }


    void OnSelectedDepartment(string idDepartment)
    {
        SelectedDepartment = idDepartment;
        _navigationManager.NavigateTo($"/home/{idDepartment}", forceLoad: true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await LoadDepartmentForSelect();
        SelectedDepartment = _lstDepartment.First().Id.ToString();
    }
    


    private void Onclick()
    {
        // Chuyển hướng đến trang đặt vé với thông tin phim
        _navigationManager.NavigateTo($"/");
    }
    

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    private void OpenDialog()
    {
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };

        DialogService.Show<Login>("", closeOnEscapeKey);
    }
}

