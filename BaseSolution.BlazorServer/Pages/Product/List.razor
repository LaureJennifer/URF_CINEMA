@page "/product/list"
@using BaseSolution.BlazorServer.Components.Product
@using BaseSolution.Domain.Entities
@using BaseSolution.Infrastructure.Extensions
@inject IDialogService _dialogService
@inject ISnackbar _snackbar
@inject EntityStatusExtensions _convert
@inject NavigationManager _navigationManager
@* @inject ProtectedSessionStorage _session;
@attribute [Authorize(Roles = "Admin,Staff")]
 *@
<MudPaper Class="pa-5">
    <MudText Class="mt-3" Typo="Typo.h4">Danh sách sản phẩm</MudText>
    <MudGrid>
        <MudItem xs="8">
            <MudButton @onclick="CreateDialog" Variant="MudBlazor.Variant.Filled" Color="Color.Success" Class="mt-3"><MudIcon Icon="@Icons.Material.Filled.AddCircleOutline"></MudIcon>Thêm mới</MudButton>
        </MudItem>
        <MudItem xs="4">
            <MudTextField DebounceInterval="100" OnDebounceIntervalElapsed="OnSearch" @bind-Value="@searchString" Placeholder="Tìm kiếm theo mã" Variant="MudBlazor.Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" />
        </MudItem>
    </MudGrid>
    @if (_lst == null)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else
    {
        if (_lst.Count == 0)
        {
            <MudAlert Severity="Severity.Warning">Không có dữ liệu</MudAlert>
        }
        else
        {
            <MudTable Items="@_lst" Class="mt-4" Hover="true" FixedHeader="true">
                <HeaderContent>
                    <MudTh>STT</MudTh>
                    <MudTh>Ảnh</MudTh>
                    <MudTh>Tên sản phẩm</MudTh>
                    <MudTh>Giá</MudTh>
                    <MudTh>Số lượng</MudTh>
                    <MudTh>Trạng thái</MudTh>
                    <MudTh>Hành động</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Stt">@(_lst.IndexOf(context) + 1)</MudTd>
                    <MudTd DataLabel="Ảnh">
                        <MudAvatar>
                            <MudImage Src="@context.ImageUrl"></MudImage>
                        </MudAvatar>
                    </MudTd>
                    <MudTd DataLabel="Tên sản phẩm">@context.Name</MudTd>
                    <MudTd DataLabel="Giá">@context.Price</MudTd>
                    <MudTd DataLabel="Số lượng">@context.Quantity</MudTd>
                    <MudTd DataLabel="Status">@_convert.ConvertForGeneral(@context.Status)</MudTd>
                    <MudTd DataLabel="" Style="text-align: center;"><MudIconButton Title="Xem chi tiết" Icon="@Icons.Material.Filled.ViewTimeline" OnClick="()=>NavigateToDetails(context.Id.ToString())"></MudIconButton>
                        </MudTd>
                    <MudTd>
                        <MudIconButton OnClick="@(async()=> await UpdateDialog(context.Id))" Variant="MudBlazor.Variant.Filled" Color="Color.Warning" Icon="@Icons.Material.Filled.BorderColor"></MudIconButton>
                        <MudIconButton OnClick="(async()=> await OnDeleteClicked(context.Id))" Variant="MudBlazor.Variant.Filled" Color="Color.Error" Icon="@Icons.Material.Filled.Delete"></MudIconButton>
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        }
    }
</MudPaper>
<MudMessageBox @ref="_mbox" Title="Xác nhận" CancelText="Hủy">
    <MessageContent>
        Xác nhận xóa nhân viên!
    </MessageContent>
    <YesButton>
        <MudButton Color="Color.Primary" OnClick="OnConfirmDelete">
            Xác nhận
        </MudButton>
    </YesButton>
</MudMessageBox>
@code {
    public List<ProductEntity> _lst = new List<ProductEntity>{
        new ProductEntity(){Id = Guid.NewGuid(), Code = "P1" , Name = "Coca Cola", ImageUrl = "https://tse3.mm.bing.net/th?id=OIP.X-adLBlOLF-U7qcCxxT_-QHaQd&pid=Api&P=0&h=180",Price = 50000,Description = "A",Quantity = 150 ,Status = Domain.Enums.EntityStatus.Active}
    };

    string searchString = "";

    MudMessageBox _mbox { get; set; }

    private async Task CreateDialog()
    {
        MudBlazor.DialogOptions closeOnEscapeKey = new MudBlazor.DialogOptions() { CloseOnEscapeKey = true };

        _dialogService.Show<Create>("Thêm mới sản phẩm", closeOnEscapeKey);
        await LoadData(searchString);
    }

    private async Task UpdateDialog(Guid Id)
    {
        var parameters = new DialogParameters<Update>();
        parameters.Add(x => x.idProduct, Id);
        var dialog = await _dialogService.ShowAsync<Update>("Sửa thông tin sản phẩm", parameters);
        var result = await dialog.Result;
        if (!result.Canceled)
        {
            await LoadData(searchString);
            StateHasChanged();
        }
    }

    void NavigateToDetails(string productId)
    {
        _navigationManager.NavigateTo($"/product/details/{productId}");
    }

    private async Task OnDeleteClicked(Guid Id)
    {
    }

    public async Task OnConfirmDelete()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData(searchString);

    }

    private async Task LoadData(string textSearch)
    {

    }
    async Task OnSearch(string debouncedText)
    {
        await LoadData(debouncedText);
    }
}
