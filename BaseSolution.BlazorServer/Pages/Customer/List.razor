@page "/lstcustomer"
@using BaseSolution.BlazorServer.Components.Customer
@using BaseSolution.BlazorServer.Pages.Customer;
@using BaseSolution.Domain.Entities;
@inject IDialogService DialogService

<MudGrid>
    <MudItem xs="8">
        <MudText Class="mt-3" Typo="Typo.h4">Danh sách khách hàng</MudText>
    </MudItem>
    <MudItem xs="4">
        <MudTextField @bind-Value="Search" Label="Tìm kiếm" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Secondary" />
    </MudItem>

</MudGrid>

<MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Success" Class="mt-3"><MudIcon Icon="@Icons.Material.Filled.AddCircleOutline"></MudIcon>Thêm mới</MudButton>

<MudTable Items="@lst" Class="mt-4">
    <HeaderContent>
        <MudTh>STT</MudTh>
        <MudTh>Mã Khách Hàng</MudTh>
        <MudTh>Tên Khách Hàng</MudTh>
        <MudTh>Ngày sinh</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Số điện thoại</MudTh>
        <MudTh>Địa chỉ</MudTh>
    </HeaderContent>
    <RowTemplate>

        <MudTd DataLabel="Stt">@(lst.IndexOf(context) + 1)</MudTd>
        <MudTd DataLabel="Mã Khách Hàng">@context.Code</MudTd>
        <MudTd DataLabel="Tên Khách Hàng">@context.Name</MudTd>
        <MudTd DataLabel="Ngày sinh">@context.DateOfBirth</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="SĐT">@context.PhoneNumber</MudTd>
        <MudTd DataLabel="Địa chỉ">@context.Address</MudTd>
        <MudTd>
            <MudIconButton @onclick="OpenDialogg" Variant="Variant.Filled" Color="Color.Warning" Icon="@Icons.Material.Filled.BorderColor"></MudIconButton>
            <MudIconButton @onclick="DeleteUser" Variant="Variant.Filled" Color="Color.Error" Icon="@Icons.Material.Filled.Delete" aria-label="delete"> Delete </MudIconButton>

        </MudTd>

    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>

</MudTable>

@code {
    public string Search { get; set; }
    List<CustomerEntity> lst = new List<CustomerEntity>()
{
        new CustomerEntity() { Code = "F001", Name = "Nguyễn Thị A" , DateOfBirth = DateTime.Now, Email = "nguyenthia1456@gmail.com", PhoneNumber = "0357834869" , Address = "Thanh Xuân - Hà Nội"}
 
};
    private void OpenDialog()
    {
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };

        DialogService.Show<Create>("Thêm mới khách hàng", closeOnEscapeKey);
    }
    private void OpenDialogg()
    {
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };

        DialogService.Show<Update>("Sửa thông tin khách hàng", closeOnEscapeKey);
    }
    private void DeleteUser()
    {
        var parameters = new DialogParameters<Delete>();
        parameters.Add(x => x.ContentText, "bạn có chắc chắn muốn xóa không ?");
        parameters.Add(x => x.ButtonText, "Xóa");
        parameters.Add(x => x.Color, Color.Error);
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
        DialogService.Show<Delete>("Xóa khách hàng", parameters, options);
    }
}
