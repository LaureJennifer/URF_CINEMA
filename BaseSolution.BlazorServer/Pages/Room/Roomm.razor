@page "/room/{filmId}/{filmScheduleId}/{roomId}"
@using BaseSolution.Application.DataTransferObjects.Film
@using BaseSolution.Application.DataTransferObjects.Room
@using BaseSolution.Application.DataTransferObjects.RoomLayout
@using BaseSolution.BlazorServer.Components
@using BaseSolution.BlazorServer.Repositories.Interfaces
<MudPaper Square="true" Class="mt-3 mud-theme-dark">

    <MudContainer Fixed="true">
        <MudCarousel Style="height:200px;color:#F5F5F5;" ShowArrows="@arrows" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
            <ChildContent>
                @if (_lst == null)
                {
                    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                }
                else
                {
                    if (_lst == null)
                    {
                        <MudAlert Severity="Severity.Warning">Không có dữ liệu</MudAlert>
                    }
                    else
                    {
                        @foreach (var item in _lst)
                        {
                            <MudCarouselItem Transition="transition" Class="ml-3">
                                <MudImage Src="@item.PosterURL" Style="width:97%;height:90%" Alt="Swedish Farm House" Elevation="25" Class="rounded-lg ma-4" />
                            </MudCarouselItem>
                        }
                    }
                }
            </ChildContent>
        </MudCarousel>
        <MudGrid>
            <MudItem xs="10" md="10">
                @if (_roomLayoutDtoId != Guid.Empty)
                {
                    <ExcelImport filmId="@filmId" filmScheduleId="@filmScheduleId" roomId="@roomId"></ExcelImport>
                }
                
            </MudItem>
            
            <MudItem xs="2" md="2" Class="mt-6">
                <MudPaper Class="pa-2 mud-success">Your seat</MudPaper>
                <MudPaper Class="pa-2 mud-Lighten5 mt-3">Available</MudPaper>
                <MudPaper Class="pa-2 mud-warning mt-3">Reserved</MudPaper>
                <MudPaper Class="pa-2 mud-error mt-3">Sold out</MudPaper>
                <MudPaper Class="pa-2 mud-primary mt-3">Be Kept</MudPaper>
                <MudPaper Class="pa-2 mud-info mt-6">Couple</MudPaper>
                <MudPaper Style="background-color:#FFEE58" Class="pa-2 mt-3">Standard</MudPaper>
                <MudPaper Style="background-color:#A1887F" Class="pa-2 mt-3">Vip</MudPaper>
                <MudLink Href="/Payment"> <MudText Align="Align.Center"> <MudButton Variant="Variant.Filled" Color="Color.Success" Class="mt-3">Procced</MudButton> </MudText></MudLink>
            </MudItem>
        </MudGrid>

    </MudContainer>
</MudPaper>
@code {
    [Parameter]
    public string filmId { get; set; }
    [Parameter]
    public string filmScheduleId { get; set; }
    [Parameter]
    public string roomId { get; set; }    
     
    [Inject] IRoomRepo _roomRepo { get; set; }
    [Inject] IRoomLayoutRepo _roomLayoutRepo { get; set; }
    [Inject] IFilmRepo _filmRepo { get; set; }
    List<FilmDto>? _lst { get; set; }
    Guid _roomLayoutDtoId { get; set; }
    RoomLayoutDto _roomLayoutDto { get; set; }
    int TotalSeconds = 300;
    bool arrows = true;
    bool bullets = true;
    bool enableSwipeGesture = true;
    bool autocycle = true;
    Transition transition = Transition.Slide;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        await LoadLayout();
    }

    private async Task GetRoomById(string roomId)
    {
        var result = await _roomRepo.GetByIdAsync(Guid.Parse(roomId));
        _roomLayoutDtoId = result.Data.RoomLayoutId;
    }

    private async Task LoadLayout()
    {
        await GetRoomById(roomId);
        var result = await _roomLayoutRepo.GetByIdAsync(_roomLayoutDtoId);
        _roomLayoutDto = result.Data;
    }

    private async Task LoadData()
    {

        var result = await _filmRepo.GetAll();
        _lst = result.Data.Data.ToList();
    }

    void CloseChip()
    {
        // Code..
    }
}
