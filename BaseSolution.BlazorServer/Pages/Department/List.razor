@page "/listdepartment"
@using BaseSolution.BlazorServer.Components.Department;
@using BaseSolution.Domain.Entities;
@inject IDialogService DialogService

<MudGrid>
 <MudItem xs="8">
        <MudText  Class="mt-3" Typo="Typo.h4">Danh sách rạp</MudText>
    </MudItem>
    <MudItem xs="4">
        <MudTextField  @bind-Value="Search" Label="Tìm kiếm"   Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Secondary" />
    </MudItem>
 </MudGrid>
<MudButton  @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Success" Class="mt-3"><MudIcon Icon="@Icons.Material.Filled.AddCircleOutline"></MudIcon>Thêm mới</MudButton>

 <MudTable Items="@lst" Class="mt-4">
         <HeaderContent>
        <MudTh>STT</MudTh>
         <MudTh>Mã Rạp</MudTh>
        <MudTh>Tên Rạp</MudTh>
        <MudTh>Địa chỉ</MudTh>
        <MudTh>SĐT</MudTh>
         <MudTh>Email</MudTh>
        <MudTh>Chức năng</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="STT">@(lst.IndexOf(context) + 1)</MudTd>
            <MudTd DataLabel="Mã Rạp">@context.Code</MudTd>
                  <MudTd DataLabel="Tên Rạp">@context.Name</MudTd>
                  <MudTd DataLabel="Địa chỉ">@context.Address</MudTd>
            <MudTd DataLabel="SĐT">@context.PhoneNumber</MudTd>
                <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd>
                        <MudIconButton @onclick="OpenDialogg" Variant="Variant.Filled" Color="Color.Warning"Icon="@Icons.Material.Filled.BorderColor"></MudIconButton>
                        <MudIconButton @onclick="DeleteUser" Variant="Variant.Filled" Color="Color.Error" Icon="@Icons.Material.Filled.Delete" aria-label="delete"> Delete </MudIconButton>
            </MudTd>
        </RowTemplate>
             <PagerContent>
                <MudTablePager />
            </PagerContent>
    </MudTable>
@code {
    public string Search { get; set; }
    List<DepartmentEntity> lst = new List<DepartmentEntity>()
    {
        new DepartmentEntity() {Code = "R01", Name = "Rạp Maditech", Address = "Số 1 Kim Chung - Thanh Xuân - Hà Nội", PhoneNumber = "0345263866", Email = "Maditech@gmail.com", AddressCodeFormat = "DC01"  },
        new DepartmentEntity() {Code = "R02", Name = "Rạp Exsodia", Address = "Số 10 Kim Chung - Thanh Xuân - Hà Nội", PhoneNumber = "0345263866", Email = "Exodia@gmail.com", AddressCodeFormat = "DC02" },
        new DepartmentEntity() {Code = "R03", Name = "Rạp Megalondon", Address = "Số 20 Kim Chung - Thanh Xuân - Hà Nội", PhoneNumber = "0345263866", Email = "Megalondon@gmail.com", AddressCodeFormat = "DC03" }
};
    private void OpenDialog()
    {
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };
        DialogService.Show<Create>("Thêm Mới Rạp Chiếu", closeOnEscapeKey);
    }
    private void OpenDialogg()
    {
        DialogOptions closeOnEscapeKey = new DialogOptions() { CloseOnEscapeKey = true };
        DialogService.Show<Update>("Sửa Thông Tin Rạp", closeOnEscapeKey);
    }
    private void DeleteUser()
    {
        var parameters = new DialogParameters<Delete>();
        parameters.Add(x => x.ContentText, "bạn có chắc chắn muốn xóa Rạp không?, đã xóa không thể khôi phục");
        parameters.Add(x => x.ButtonText, "Xóa");
        parameters.Add(x => x.Color, Color.Error);
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
        DialogService.Show<Delete>("Xóa Rạp", parameters, options);
    }
}
