@page "/booking/{FilmId}"
@using BaseSolution.Application.DataTransferObjects.Film
@using BaseSolution.Application.DataTransferObjects.FilmScheduleRoom
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Film.Request
@using BaseSolution.BlazorServer.Data.DataTransferObjects.FilmSchedule.Request
@using BaseSolution.BlazorServer.Repositories.Implements
@using BaseSolution.BlazorServer.Repositories.Interfaces
@inject NavigationManager _navigationManager
@if (_selectedFilm != null)
{
   
        <MudTabs Elevation="4" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" Style="@($"color{Colors.Shades.White}; background-color:#180F20;")">
            
            @foreach (var date in _selectedFilm.ShowDates)
            {
            <MudTabPanel OnClick="()=>SelectDate(date)" Text="@date.ToString("dd/MM")" Style="background-color:#180F20;">
               
                </MudTabPanel>
            
            }

        <MudItem xs="12" lg="12" md="12" Class="d-flex justify-center flex-grow-1 gap-4">
            <MudImage Src="@_selectedFilm.TrailerURL" Style="width:90%;height:50%;" Alt="Swedish Farm House" Elevation="25" />
        </MudItem>
        </MudTabs>
    <MudGrid Style="background-color:#180F20" Class="border border-solid mud-border-info pa-4">
        <MudItem xs="12" lg="12" md="12">
            <MudText Typo="Typo.h5" Color="Color.Error">Tên phim : @_selectedFilm.Title</MudText>
            <MudText Typo="Typo.caption" Style="color:white"><MudIcon Icon="@Icons.Material.TwoTone.Discount" Style="color:white" />@_selectedFilm.Genres</MudText>
            <MudText Typo="Typo.subtitle1" Style="color:white">@_selectedFilm.Duration phút</MudText>
            <MudText Typo="Typo.h6" Style="color:white">@_selectedFilm.Script</MudText>
            @foreach(var time in _selectedFilm.ShowTimes)
            {
                <MudButton OnClick="()=>SelectTime(time)" Variant="Variant.Filled" Style="background-color:white">@time.ToString("hh : mm")</MudButton>
            }
        </MudItem>
        <MudButton OnClick="()=>NavigateToRoom()" Variant="Variant.Filled" Style="background-color:greenyellow">Đặt vé</MudButton>
    </MudGrid>
}
else
{
    <p>Không tìm thấy thông tin phim.</p>
}
@code {
    [Parameter]
    public string filmId { get; set; }

    [Inject]
    IBookingFilmRepo _bookingFilmRepo{ get; set; }
    [Inject]
    IFilmScheduleRoomRepo _filmSheduleRoomRepo { get; set; }
    FilmDto _selectedFilm { get; set; }
    ViewFilmScheduleWithPaginationRequest obj = new();
    FilmScheduleRoomFindByDateTimeRequest request = new();
    List<FilmDto> _lstFilm = new();    
    DateTimeOffset _showDateSelected;
    DateTimeOffset _showTimeSelected;
    Guid _roomId;
    protected override async Task OnInitializedAsync()
    {
        await GetFilmById(filmId);
    }

    private async Task GetFilmById(string filmId)
    {
        var result = await _bookingFilmRepo.GetByIdAsync(filmId);
        _selectedFilm = result.Data;
        _showDateSelected = _selectedFilm.ShowDates[0];
        _showTimeSelected = _selectedFilm.ShowTimes[0];
    }
    private async Task LoadData()
    {
        // var result = await _bookingFilmRepo.GetAllFilmSchedule(obj);
        // _selectedFilm = result.Data;
    }
    private void SelectDate(DateTimeOffset date)
    {
        _showDateSelected = date;
    }
    private void SelectTime(DateTimeOffset time)
    {
        _showTimeSelected = time;
    }
    private async Task FindFilmScheduleRoomByDateTime()
    {

        request.ShowDate = _showDateSelected;
        request.ShowTime = _showTimeSelected;
        var result = await _filmSheduleRoomRepo.GetFilmScheduleRoomByShowDateTimeAsync(request);
        _roomId = result.Data.RoomId;


    }
    private async void NavigateToRoom()
    {
        await FindFilmScheduleRoomByDateTime();
        _navigationManager.NavigateTo($"/room/{filmId}/{_roomId.ToString()}");
    }
}
