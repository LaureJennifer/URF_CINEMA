@page "/booking/{FilmId}"
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Film
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Film.Request
@using BaseSolution.BlazorServer.Data.DataTransferObjects.FilmSchedule.Request
@using BaseSolution.BlazorServer.Repositories.Interfaces
@inject NavigationManager NavigationManager
@if (_selectedFilm != null)
{
   
        <MudTabs Elevation="4" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" Style="@($"color{Colors.Shades.White}; background-color:#180F20;")">

        <MudTabPanel Text="@_selectedFilm.ShowDate.ToString("dd/mm")" Style="background-color:#180F20;">
            </MudTabPanel>
        </MudTabs>
    
    <MudGrid Style="background-color:#180F20" Class="border border-solid mud-border-info pa-4">
        <MudItem xs="12" lg="12" md="12">
            <MudText Typo="Typo.h5" Color="Color.Error">@_selectedFilm.Title</MudText>
            <MudText Typo="Typo.caption" Style="color:white"><MudIcon Icon="@Icons.Material.TwoTone.Discount" Style="color:white" />@_selectedFilm.Duration</MudText>
            <MudText Typo="Typo.subtitle1" Style="color:white">@_selectedFilm.ReleaseDate.ToString("dd/mm/yyyy") phút</MudText>
            <MudText Typo="Typo.h6" Style="color:white">@_selectedFilm.Script</MudText>
            <MudLink Href="/room"><MudButton Variant="Variant.Filled" Style="background-color:white">@_selectedFilm.ShowTime.ToString("hh : mm")</MudButton></MudLink>
        </MudItem>
        <MudItem xs="12" lg="12" md="12" Class="d-flex justify-center flex-grow-1 gap-4">
            <MudImage Src="@_selectedFilm.TrailerURL"  Style="width:90%;height:50%;" Alt="Swedish Farm House" Elevation="25"/>
        </MudItem>
    </MudGrid>
}
else
{
    <p>Không tìm thấy thông tin phim.</p>
}
@code {
    [Parameter]
    public string FilmId { get; set; }

    private FilmDto _selectedFilm { get; set; }
    [Inject]
    public IBookingFilmRepo _bookingFilmRepo{ get; set; }
    public List<FilmDto> _lstFilm = new();
    public ViewFilmScheduleWithPaginationRequest obj = new();
    protected override async Task OnInitializedAsync()
    {
        await GetFilmById(FilmId);
    }

    private async Task GetFilmById(string filmId)
    {
        var result = await _bookingFilmRepo.GetByIdAsync(filmId);
        _selectedFilm = result.Data;
    }
    private async Task LoadData()
    {
        var result = await _bookingFilmRepo.GetAllFilmSchedule(obj);
        _lstFilm = result.Data.Data.ToList();
    }
}
