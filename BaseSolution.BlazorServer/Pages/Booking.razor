@page "/booking/{departmentId}/{filmId}"
@using BaseSolution.Application.DataTransferObjects.Film
@using BaseSolution.Application.DataTransferObjects.FilmScheduleRoom
@using BaseSolution.BlazorServer.Data.DataTransferObjects.Film.Request
@using BaseSolution.BlazorServer.Data.DataTransferObjects.FilmSchedule.Request
@using BaseSolution.BlazorServer.Repositories.Implements
@using BaseSolution.BlazorServer.Repositories.Interfaces
@inject NavigationManager _navigationManager
@if (_selectedFilm != null)
{
    if (_showDateList != null)
    {
        <MudTabs Elevation="0" Style="color : white; background-color:#014380;">

            @foreach (var date in _showDateList)
            {
                <MudTabPanel OnClick="()=>SelectDate(date)" Text="@date.ToString("dd/MM")" Style="background-color:#014380;color:#F2FFFF;">

                </MudTabPanel>

            }     
        </MudTabs>
        
        <iframe width="560" height="700" src="@_selectedFilm.TrailerURL"
                title="YouTube video player" frameborder="0" allow="accelerometer; auto play; Fullscreen; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                referrerpolicy="strict-origin-when-cross-origin"></iframe>
        <MudGrid Style="background-color:#04192E" Class="border border-solid mud-border-info pa-4">
            <MudItem xs="12" lg="12" md="12">
                <MudText Class="mb-4" Typo="Typo.h3" Style="color:#014380">Tên phim : @_selectedFilm.Title</MudText>
                <MudGrid>
                    <MudItem><MudIcon Icon="@Icons.Material.TwoTone.Discount" Style="color:white" /></MudItem>
                    <MudItem xs="2" md="2" lg="2"><MudText Typo="Typo.body2" Style="color:white">Thể loại: @_selectedFilm.Genres</MudText></MudItem>
                </MudGrid>
                <MudText Typo="Typo.body1" Style="color:white">Thời lượng: @_selectedFilm.Duration phút</MudText>
                <MudText Typo="Typo.body1" Style="color:white">Phụ đề: @_selectedFilm.Script</MudText>
                <MudText Typo="Typo.body1" Style="color:white">Đạo diễn: @_selectedFilm.DirectedBy</MudText>
                <MudText Typo="Typo.body1" Style="color:white">Diễn viên: @_selectedFilm.Actor</MudText>
                <MudText Typo="Typo.body1" Style="color:white">Độ tuổi: @_selectedFilm.AgeRating</MudText>
                <MudText Typo="Typo.body1" Style="color:white">Nội dung: @_selectedFilm.Description</MudText>

                    @foreach (var time in _selectedFilm.ShowTimes)
                {
                    if (time.Date == _showDateSelected)
                    {
                        <MudButton OnClick="()=>SelectTime(time)" Variant="Variant.Filled" Class="mx-2 mt-5" Style="background-color:#CCA943">@time.ToString("hh : mm tt")</MudButton>
                    }
                }
            </MudItem>
        </MudGrid>
    }
    
}
else
{
    <p>Không tìm thấy thông tin phim.</p>
}

@code {
    [Parameter]
    public string filmId { get; set; }
    [Parameter]
    public string departmentId { get; set; }
    [Inject]
    IBookingRepo _bookingRepo{ get; set; }
    [Inject]
    IFilmScheduleRoomRepo _filmSheduleRoomRepo { get; set; }
    FilmDto _selectedFilm { get; set; }
    ViewFilmScheduleWithPaginationRequest obj = new();
    FilmScheduleRoomFindByDateTimeRequest request = new();
    List<FilmDto> _lstFilm = new();    
    DateTimeOffset _showDateSelected;
    DateTimeOffset _showTimeSelected;
    Guid _roomId;
    Guid _filmScheduleId;
    List<DateTime> _showDateList =new();


    protected override async Task OnInitializedAsync()
    {
        await GetFilmById(filmId);
    }

    private async Task GetFilmById(string filmId)
    {
        var result = await _bookingRepo.GetByIdAsync(filmId);

        _selectedFilm = result.Data!;
        _showTimeSelected = _selectedFilm.ShowTimes[0];
        _showDateList = _selectedFilm.ShowDates.Select(d => d.Date).Distinct().ToList();
        _showDateSelected = _showDateList[0];
    }

    private async Task LoadData()
    {
        // var result = await _bookingRepo.GetAllFilmSchedule(obj);
        // _selectedFilm = result.Data;
    }

    private void SelectDate(DateTimeOffset date)
    {
        _showDateSelected = date;
    }

    private void SelectTime(DateTimeOffset time)
    {
        _showTimeSelected = time;
        NavigateToRoom();
    }

    private async Task FindFilmScheduleRoomByDateTime()
    {

        request.ShowDate = _showDateSelected;
        request.ShowTime = _showTimeSelected;
        var result = await _filmSheduleRoomRepo.GetFilmScheduleRoomByShowDateTimeAsync(request);
        _filmScheduleId = result.Data!.FilmScheduleId;
        _roomId = result.Data.RoomId;
    }

    private async void NavigateToRoom()
    {
        await FindFilmScheduleRoomByDateTime();
        _navigationManager.NavigateTo($"/room/{departmentId}/{filmId}/{_filmScheduleId.ToString()}/{_roomId.ToString()}");
    }
}
