@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using BaseSolution.Application.DataTransferObjects.RoomLayout
@using BaseSolution.Application.DataTransferObjects.RoomLayout.Request
@using BaseSolution.Application.DataTransferObjects.Seat
@using BaseSolution.Application.DataTransferObjects.Seat.Request
@using BaseSolution.BlazorServer.Data.ValueObjects.Common
@using BaseSolution.BlazorServer.Repositories.Interfaces
@using BaseSolution.Domain.Enums
@using MudBlazor
@using static MudBlazor.CategoryTypes

@inject IDialogService DialogService
@inject ISnackbar _snackbar
@inject NavigationManager _navigate;

<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12" md="6">
                <MudTextField @bind-Value="@_roomLayoutDto.Name" Placeholder="Tên bố cục phòng chiếu*" />
            </MudItem> 
            <MudItem xs="12" sm="6">
                <MudSelect Placeholder="Trạng thái*" T="EntityStatus" AnchorOrigin="Origin.BottomCenter" @bind-Value="_roomLayoutDto.Status" For="@(() => _roomLayoutDto.Status)">
                    <MudSelectItem Value="EntityStatus.Active">Hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.InActive">Không hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.Pending">Chờ</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForActivation">Chờ hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForConfirmation">Chờ kích hoạt</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForApproval">Chờ chấp thuận</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.Locked">Khóa</MudSelectItem>
                </MudSelect>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Cancel">Hủy</MudButton>
        <MudButton Color="Color.Primary" OnClick="OnButtonClicked">Chỉnh sửa</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance _mudDialog { get; set; }

    [Inject]
    public IRoomLayoutRepo _roomLayoutRepo { get; set; }

    public RoomLayoutDto _roomLayoutDto = new();

    [Parameter]
    public Guid idRoomLayout { get; set; }

    public RoomLayoutUpdateRequest obj = new();

    private async Task OnButtonClicked()
    {
        obj.Id = _roomLayoutDto.Id;
        obj.Name = _roomLayoutDto.Name;
        obj.Status = _roomLayoutDto.Status;
       
        bool? confirm = await DialogService.ShowMessageBox(
     "Xác nhận",
     "Bạn có chắc chỉnh sửa?",
     yesText: "Xác nhận", cancelText: "Hủy");
        if (confirm == true)
        {            
            var result = await _roomLayoutRepo.UpdateAsync(obj);
            if (result == true)
            {
                _mudDialog.Close(DialogResult.Ok(true));
                _snackbar.Add("Sửa thành công", Severity.Success);
                _navigate.NavigateTo("/room-layout/list");
                StateHasChanged();
            }
            else
            {
                _snackbar.Add
                (
                    "Sửa thất bại",
                        Severity.Error
                );
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {

        var result = await _roomLayoutRepo.GetByIdAsync(idRoomLayout);
        _roomLayoutDto = result.Data!;

    }
    void Cancel() => _mudDialog.Cancel();
}