@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using BaseSolution.Application.DataTransferObjects.Film
@using BaseSolution.Application.DataTransferObjects.Film.Request
@using BaseSolution.BlazorServer.Data.ValueObjects.Common
@using BaseSolution.BlazorServer.Repositories.Interfaces
@using BaseSolution.Domain.Entities
@using BaseSolution.Domain.Enums
@using static MudBlazor.CategoryTypes
@inject IDialogService _dialogService
@inject ISnackbar _snackbar
@inject NavigationManager _navigate;
<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.Code" Placeholder="Mã phim*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.Title" Placeholder="Tên phim*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.DirectedBy" Placeholder="Đạo diễn*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.Actor" Placeholder="Diễn viên*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.Language" Placeholder="Ngôn ngữ*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.Genres" Placeholder="Thể loại*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.ReleaseDate" Label="dd/MM/yyyy" Placeholder="Ngày khởi chiếu*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.Duration" Label="phút" Placeholder="Thời lượng*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.Script" Placeholder="Định dạng phim*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_filmDto.AgeRating" Placeholder="Độ tuổi*" />
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudSelect Placeholder="Trạng thái*" T="EntityStatus" AnchorOrigin="Origin.BottomCenter" @bind-Value="_filmDto.Status" For="@(() => _filmDto.Status)">
                    <MudSelectItem Value="EntityStatus.Active">Hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.InActive">Không hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.Pending">Chờ</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForActivation">Chờ hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForConfirmation">Chờ kích hoạt</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForApproval">Chờ chấp thuận</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.Locked">Khóa</MudSelectItem>
                </MudSelect>
            </MudItem>
        </MudGrid>
        <MudGrid Class="mt-3">
            <MudItem xs="6" sm="6" md="6">
                <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
                    <ButtonTemplate>
                        <MudButton HtmlTag="Placeholder" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload" for="@context">Ảnh</MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudItem>
            @if (imageUrl != null)
            {
                <MudItem xs="6" sm="6" md="6">
                    <MudImage Style="width:60%;" Src="@imageUrl" />
                </MudItem>
            }
        </MudGrid>
        <MudGrid Class="mt-3">
            <MudItem xs="6" sm="6" md="6">
                <MudFileUpload T="IBrowserFile" FilesChanged="UploadPosterFiles">
                    <ButtonTemplate>
                        <MudButton HtmlTag="Placeholder" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload" for="@context">Ảnh Bìa</MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudItem>
            @if (posterUrl != null)
            {
                <MudItem xs="6" sm="6" md="6">
                    <MudImage Style="width:60%;" Src="@posterUrl" />
                </MudItem>
            }
        </MudGrid>
        <MudGrid Class="mt-3">
            <MudItem xs="6" sm="6" md="6">
                <MudFileUpload T="IBrowserFile" FilesChanged="UploadTrailerFiles">
                    <ButtonTemplate>
                        <MudButton HtmlTag="Placeholder" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload" for="@context">Trailer</MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudItem>
            @if (trailerUrl != null)
            {
                <MudItem xs="6" sm="6" md="6">
                    <MudImage Style="width:60%;" Src="@trailerUrl" />
                </MudItem>
            }
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Cancel">Hủy</MudButton>
        <MudButton Color="Color.Primary" OnClick="OnButtonClicked">Chỉnh sửa</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance _mudDialog { get; set; }

    [Inject]
    public IFilmRepo _filmRepo { get; set; }

    public FilmDto _filmDto = new();

    public FilmUpdateRequest obj = new();
    public ViewFilmWithPaginationRequest customer_ = new();

    public string imageUrl { get; set; } = "";
    public string posterUrl { get; set; } = "";
    public string trailerUrl { get; set; } = "";

    [Parameter]
    public Guid idFilm { set; get; }

    IList<IBrowserFile> files = new List<IBrowserFile>();
    ImageHandle imageHandle = new();

    private async Task UploadFiles(IBrowserFile file)
    {
        imageUrl = @"\image\Film\" + await imageHandle.AddImage(file, "Film");
        files.Add(file);
    }

    private async Task UploadPosterFiles(IBrowserFile file)
    {
        posterUrl = @"\poster\Film\" + await imageHandle.AddImage(file, "Film");
        files.Add(file);
    }

    private async Task UploadTrailerFiles(IBrowserFile file)
    {
        posterUrl = @"\trailer\Film\" + await imageHandle.AddImage(file, "Film");
        files.Add(file);
    }

    private async Task OnButtonClicked()
    {
        obj.Code = _filmDto.Code;
        obj.Title = _filmDto.Title;
        obj.DirectedBy = _filmDto.DirectedBy;
        obj.Actor = _filmDto.Actor;
        obj.Language = _filmDto.Language;
        obj.UrlImage = imageUrl;
        obj.PosterURL = posterUrl;
        obj.TrailerURL = trailerUrl;
        obj.Genres = _filmDto.Genres;
        obj.Duration = _filmDto.Duration;
        obj.ReleaseDate = _filmDto.ReleaseDate;
        obj.Script = _filmDto.Script;
        obj.AgeRating = _filmDto.AgeRating;
        obj.Status = _filmDto.Status;
        bool? confirm = await _dialogService.ShowMessageBox(
     "Xác nhận",
     "Bạn có chắc chắn sửa?",
     yesText: "Xác nhận", cancelText: "Hủy");
        if (confirm == true)
        {
            var result = await _filmRepo.UpdateAsync(obj);
            if (result == true)
            {
                await Task.Delay(1000);
                _mudDialog.Close(DialogResult.Ok(true));
                _snackbar.Add("Sửa thành công", Severity.Success);
                _navigate.NavigateTo("/film/list");
                StateHasChanged();
            }
            else
            {
                _snackbar.Add
                (
                    "Sửa thất bại",
                        Severity.Error
                );
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {

        var result = await _filmRepo.GetByIdAsync(idFilm);
        _filmDto = result.Data!;
    }

    void Cancel() => _mudDialog.Cancel();
}
