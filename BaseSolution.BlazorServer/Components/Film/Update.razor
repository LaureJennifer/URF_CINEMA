@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using BaseSolution.Domain.Entities
@using BaseSolution.Domain.Enums
@using static MudBlazor.CategoryTypes
@inject IDialogService DialogService
@inject ISnackbar _snackbar
<MudCard>
    <MudForm Model="@film" @ref="@from" ValidationDelay="0" Style="width:auto; padding:15px;">
        <MudCardContent>
            <MudGrid>
                <MudItem xs="6">
                    <MudTextField @bind-Value="film.Code"
                                  For="@(() => film.Code)"
                                  Immediate="true"
                                  Label="Mã Phim" />
                    <MudTextField @bind-Value="film.Language"
                                  For="@(() => film.Language)"
                                  Immediate="true" 
                                  Label="Ngôn ngữ" />
                    <MudTextField @bind-Value="film.DirectedBy"
                                  For="@(() => film.DirectedBy)"
                                  Immediate="true" 
                                  Label="Đạo diễn" />
                    <MudTextField @bind-Value="film.AgeRating"
                                  For="@(() => film.AgeRating)"
                                  Immediate="true"
                                  Label="Độ tuổi" />
            </MudItem>
                <MudItem xs="6">
                     <MudTextField @bind-Value="film.Title"
                                  For="@(() => film.Title)"
                                  Immediate="true"
                                  Label="Tên Phim" />
                
                    <MudTextField @bind-Value="film.Genres"
                                  For="@(() => film.Genres)"
                                  Immediate="true"
                                  Label="Thể loại" />
                    <MudTextField @bind-Value="film.Duration"
                                  For="@(() => film.Duration)"
                                  Immediate="true"
                                  Label="Thời lượng" />
            </MudItem>
      </MudGrid>
       <MudGrid>
                   <MudItem xs="6">
                        <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Class="mt-3">
                            <ButtonTemplate>
                                <MudButton HtmlTag="label"
                                           Variant="Variant.Filled"
                                           Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.CloudUpload"
                                           for="@context"> Ảnh </MudButton>
                            </ButtonTemplate>
                        </MudFileUpload>
                         </MudItem>
                         <MudItem xs="6">
                        <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Class="mt-3">
                            <ButtonTemplate>
                                <MudButton HtmlTag="label"
                                           Variant="Variant.Filled"
                                           Color="Color.Info"
                                           StartIcon="@Icons.Material.Filled.CloudUpload"
                                           for="@context"> Trailler </MudButton>
                            </ButtonTemplate>
                        </MudFileUpload>
                         </MudItem>
                </MudGrid>
        </MudCardContent>
               </MudForm>   
    <DialogActions>
            <MudGrid>
                <MudItem xs="7">

                </MudItem>
                <MudItem xs="5">
                     <MudButton   Color="Color.Error" OnClick="Cancel">Hủy</MudButton>
            <MudButton  Color="Color.Warning" OnClick="OnButtonClicked">Sửa</MudButton>
            </MudItem>
            </MudGrid>
    </DialogActions>
</MudCard>

@code {
    [Inject] private IDialogService _dialogService { get; set; } = null!;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(IBrowserFile file)
    {
        files.Add(file);
    }
    [Inject] private IDialogService dialogService { get; set; }
    private async void OnButtonClicked()
    {
        bool? result = await _dialogService.ShowMessageBox(
     "Xác nhận",
     "Bạn có chắc chắn sửa?",
     yesText: "Xác nhận", cancelText: "Hủy");
        if (result == true)
        {
            _snackbar.Add("Sửa phim thành công!", Severity.Success);
            await Task.Delay(60);
            MudDialog.Close(DialogResult.Ok(true));
            StateHasChanged();
        }
        else
        {
            _snackbar.Add("Sửa phim thất bại!", Severity.Error);
        }
    }
    MudForm from;
    FilmModel film = new FilmModel();

    public class FilmModel
    {
        public string Code { get; set; }
        public string Title { get; set; }
        public string DirectedBy { get; set; }
        public string Language { get; set; }
        public string Genres { get; set; }
        public string Duration { get; set; }
        public string AgeRating { get; set; }
    }
}
