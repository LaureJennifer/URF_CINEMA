@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using BaseSolution.Domain.Entities
@using BaseSolution.Domain.Enums
@using static MudBlazor.CategoryTypes
@inject IDialogService DialogService
@inject ISnackbar _snackbar

<MudCard>
    <MudForm Model="@bill" @ref="@from" ValidationDelay="0" Style="width:auto;padding:15px;">
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="6">
               
                            <MudTextField @bind-Value="bill.CustomerId" 
                                          For="@(() => bill.CustomerId)"
                                          Immediate="true"
                                          Label="Mã Khách hàng" />
                            <MudTextField @bind-Value="bill.TicketQuantity"
                                          For="@(() => bill.TicketQuantity)"
                                          Immediate="true"
                                          Label="Số lượng vé" />
                                           <MudTextField @bind-Value="bill.Status"
                              For="@(() => bill.Status)"
                              Immediate="true" Label="Trạng Thái" />
                   </MudItem>
                    <MudItem xs="6">

                            <MudTextField @bind-Value="bill.Description"
                                          For="@(() => bill.Description)"
                                          Immediate="true"
                                          Label="Mô tả" />
                            <MudTextField @bind-Value="bill.TotalPrice"
                                          For="@(() => bill.TotalPrice)"
                                          Immediate="true" Label="Tổng tiền" />
                   </MudItem>
                 </MudGrid>
            </MudCardContent>
            <DialogActions>
                 <MudGrid>
                <MudItem xs="7">
                </MudItem>

                <MudItem xs="2">
                    <MudButton Color="Color.Error" OnClick="Cancel">Hủy</MudButton>
                </MudItem>
                <MudItem xs="3">
                   <MudButton Color="Color.Success" OnClick="OnButtonClicked">Thêm mới</MudButton>
            </MudItem>
            </MudGrid>
            </DialogActions>
        </MudForm>
    
</MudCard>

@code {
    [Inject] private IDialogService _dialogService { get; set; } = null!;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(IBrowserFile file)
    {
        files.Add(file);
    }
    [Inject] private IDialogService dialogService { get; set; }
    private async void OnButtonClicked()
    {
        bool? result = await _dialogService.ShowMessageBox(
     "Xác nhận",
     "Bạn có chắc thêm mới?",
     yesText: "Xác nhận", cancelText: "Hủy");
        if (result == true)
        {
            _snackbar.Add("Thêm mới hóa đơn thành công!", Severity.Success);
            await Task.Delay(60);
            MudDialog.Close(DialogResult.Ok(true));
            StateHasChanged();
        }
        else
        {
            _snackbar.Add("Thêm mới hóa đơn thất bại!", Severity.Error);
        }
    }
    MudForm from;
    BillModel bill = new BillModel();

    public class BillModel
    {
        public Guid CustomerId { get; set; }
        public int TicketQuantity { get; set; }
        public string Description { get; set; }
        public double TotalPrice { get; set; }
        public EntityStatus Status { get; set; } = new EntityStatus();
    }
}