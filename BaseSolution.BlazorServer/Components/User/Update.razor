@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using BaseSolution.Application.DataTransferObjects.User;
@using BaseSolution.Domain.Entities
@using BaseSolution.Domain.Enums
@using static MudBlazor.CategoryTypes
@inject IDialogService DialogService
@inject ISnackbar _snackbar

<MudCard >
    <MudForm Model="@userDto" @ref="@from" ValidationDelay="0" Style="width:auto;padding:15px;">
        <MudCardContent >
 <MudGrid>
                <MudItem xs="6">
                    <MudTextField @bind-Value="userDto.Code"
                                  For="@(() => userDto.Code)"
                                  Immediate="true"
                                  Label="Mã nhân viên" />
                    <MudTextField @bind-Value="userDto.UserName"
                                  For="@(() => userDto.UserName)"
                                  Immediate="true"
                                  Label="Tên đăng nhập" />
                                    <MudTextField @bind-Value="userDto.PhoneNumber"
                                  For="@(() => userDto.PhoneNumber)"
                                  Immediate="true"
                                  Label="Số điện thoại" />
                 </MudItem>
                 <MudItem xs="6">
                      <MudTextField @bind-Value="userDto.Name"
                                  For="@(() => userDto.Name)"
                                  Immediate="true"
                                  Label="Tên nhân viên" />
                                    <MudTextField @bind-Value="userDto.PassWord"
                                  For="@(() => userDto.PassWord)"
                                  Immediate="true"
                                  Label="Mật khẩu" />
                    <MudTextField @bind-Value="userDto.Email"
                                  For="@(() => userDto.Email)"
                                  Immediate="true"
                                  Label="Email" />
                </MudItem>
          </MudGrid>
               <MudGrid>
                   <MudItem xs="6">
                        <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Class="mt-3">
                            <ButtonTemplate>
                                <MudButton HtmlTag="label"
                                           Variant="Variant.Filled"
                                           Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.CloudUpload"
                                           for="@context"> Ảnh </MudButton>
                            </ButtonTemplate>
                        </MudFileUpload>
                         </MudItem>
                         <MudItem xs="6">
                       @* <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Class="mt-3">
                            <ButtonTemplate>
                                <MudButton HtmlTag="label"
                                           Variant="Variant.Filled"
                                           Color="Color.Info"
                                           StartIcon="@Icons.Material.Filled.CloudUpload"
                                           for="@context"> Trailler </MudButton>
                            </ButtonTemplate>
                        </MudFileUpload>*@
                         </MudItem>
                </MudGrid>
        </MudCardContent>   
        <DialogActions>
            <MudGrid>
                <MudItem xs="7">
                    
                </MudItem>
                <MudItem xs="5">
                     <MudButton Color="Color.Error" OnClick="Cancel">Hủy</MudButton>
            <MudButton Color="Color.Warning" OnClick="OnButtonClicked">Sửa</MudButton>
            </MudItem>
            </MudGrid>
        </DialogActions>
   </MudForm>
</MudCard>

@code {

    [Inject] private IDialogService _dialogService { get; set; } = null!;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(IBrowserFile file)
    {
        files.Add(file);
    }
    [Inject] private IDialogService dialogService { get; set; }
    private async void OnButtonClicked()
    {
        bool? result = await _dialogService.ShowMessageBox(
        "Xác nhận",
        "Bạn có chắc thêm mới?",
        yesText: "Xác nhận", cancelText: "Hủy");
        if (result == true)
        {
            _snackbar.Add("Thêm mới thành công!", Severity.Success);
            await Task.Delay(60);
            MudDialog.Close(DialogResult.Ok(true));
            StateHasChanged();
        }
        else
        {
            _snackbar.Add("Thêm mới thất bại!", Severity.Error);
        }
    }
    
    MudForm from;
    public UserDto userDto = new UserDto();
}
