@using BaseSolution.BlazorServer.Data.ValueObjects.Common
@using BaseSolution.Domain.Entities
@using BaseSolution.Domain.Enums

@using static MudBlazor.CategoryTypes
@inject IDialogService DialogService
@inject ISnackbar _snackbar
@inject NavigationManager _navigate;
<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_productEntity.Name" Placeholder="Tên sản phẩm*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_productEntity.Price" Placeholder="Giá*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_productEntity.Quantity" Placeholder="Số lượng*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_productEntity.Description" Placeholder="Mô tả(nếu có)*" />
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudSelect Placeholder="Trạng thái*" T="EntityStatus" AnchorOrigin="Origin.BottomCenter" @bind-Value="_productEntity.Status" For="@(() => _productEntity.Status)">
                    <MudSelectItem Value="EntityStatus.Active">Hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.InActive">Không hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.Pending">Chờ</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForActivation">Chờ hoạt động</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForConfirmation">Chờ kích hoạt</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.PendingForApproval">Chờ chấp thuận</MudSelectItem>
                    <MudSelectItem Value="EntityStatus.Locked">Khóa</MudSelectItem>
                </MudSelect>
            </MudItem>
        </MudGrid>
        <MudGrid Class="mt-3">
            <MudItem xs="6" sm="6" md="6">
                <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label" Variant="MudBlazor.Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload" for="@context">Ảnh</MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
            </MudItem>
            @if (imageUrl != null)
            {
                <MudItem xs="6" sm="6" md="6">
                    <MudImage Style="width:60%;" Src="@imageUrl" />
                </MudItem>
            }
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Cancel">Hủy</MudButton>
        <MudButton Color="Color.Primary" OnClick="OnButtonClicked">Chỉnh sửa</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance _mudDialog { get; set; }
    [Parameter]
    public Guid idProduct { get; set; }

    public ProductEntity _productEntity = new();

    public string imageUrl { get; set; } = "";
    IList<IBrowserFile> files = new List<IBrowserFile>();
    ImageHandle imageHandle = new();

    private async Task UploadFiles(IBrowserFile file)
    {
        imageUrl = @"\image\Product\" + await imageHandle.AddImage(file, "Product");
        files.Add(file);
    }

    private async Task OnButtonClicked()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
    }

    void Cancel() => _mudDialog.Cancel();

}
