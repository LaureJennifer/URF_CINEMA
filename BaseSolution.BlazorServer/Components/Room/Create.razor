@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using BaseSolution.Application.DataTransferObjects.Room
@using BaseSolution.Application.DataTransferObjects.Room.Request
@using BaseSolution.BlazorServer.Repositories.Interfaces
@using BaseSolution.Domain.Entities
@using BaseSolution.Domain.Enums
@using static MudBlazor.CategoryTypes

@inject IDialogService DialogService
@inject ISnackbar _snackbar
@inject NavigationManager _navigate;

<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_roomDto.Code" Label="Mã phòng*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_roomDto.ScreenSize" Label="Kích thước màn hình*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_roomDto.Capacity" Label="Sức chứa*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_roomDto.SoundSystem" Label="Âm thanh*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_roomDto.DepartmentName" Label="Tên rạp*" />
            </MudItem>
            <MudItem xs="6" sm="6" md="6">
                <MudTextField @bind-Value="_roomDto.DepartmentAddress" Label="Địa chỉ*" />
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Cancel">Hủy</MudButton>
        <MudButton Color="Color.Success" OnClick="OnButtonClicked">Thêm mới</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance _mudDialog { get; set; }
    [Inject]
    public IRoomRepo _roomRepo { get; set; }

    public RoomDto _roomDto = new();
    private List<RoomDto> _lstRoom { get; set; }

    public RoomCreateRequest obj = new();
    public ViewRoomWithPaginationRequest room_ = new();

    private async Task OnButtonClicked()
    {
        obj.Code = _roomDto.Code;
        obj.Capacity = _roomDto.Capacity;
        obj.SoundSystem = _roomDto.SoundSystem;
        obj.ScreenSize = _roomDto.ScreenSize;
        obj.Status = _roomDto.Status;
        obj.DepartmentId = _roomDto.DepartmentId;
        obj.RoomLayoutId = _roomDto.RoomLayoutId;
        bool? confirm = await DialogService.ShowMessageBox(
     "Xác nhận",
     "Bạn có chắc thêm mới?",
     yesText: "Xác nhận", cancelText: "Hủy");
        if (confirm == true)
        {
            var result = await _roomRepo.AddAsync(obj);
            if (result == true)
            {
                _mudDialog.Close(DialogResult.Ok(true));
                _snackbar.Add("Thêm thành công", Severity.Success);
                _navigate.NavigateTo("/room/list");
                StateHasChanged();
            }
            else
            {
                _snackbar.Add
                (
                    "Thêm thất bại",
                        Severity.Error
                );
            }
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {

        var result = await _roomRepo.GetAllActive(room_);
        if (result != null)
        {
            _lstRoom = result.Data.Data.ToList();
        }
    }


    void Cancel() => _mudDialog.Cancel();
}