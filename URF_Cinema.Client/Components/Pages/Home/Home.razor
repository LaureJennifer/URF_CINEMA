@page "/"
@using URF_Cinema.Application.DataTransferObjects.Department.Request
@using URF_Cinema.Application.DataTransferObjects.DepartmentFilm
@using URF_Cinema.Application.DataTransferObjects.DepartmentFilm.Request
@using URF_Cinema.Application.DataTransferObjects.Film
@using URF_Cinema.Client.Components.Dialog.Film
@using URF_Cinema.Client.Data.DataTransferObjects.Film.Request
@using URF_Cinema.Client.Repositories.Interfaces
@using URF_Cinema.Domain.Entities
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@inject ISnackbar _snackbar
@* @attribute [Authorize(Roles = "ADMIN,Nhân viên,Customer")] *@
@if (string.IsNullOrEmpty(SelectedDepartmentName))
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudPaper Style="background-color:#04192E">
        <MudContainer Fixed="true">
            <MudCarousel ShowArrows="@arrows" Style="height:200px;" ShowBullets="@bullets" EnableSwipeGesture="@enableSwipeGesture" AutoCycle="@autocycle" TData="object">
                <ChildContent>
                    @if (_lst == null)
                    {
                        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                    }
                    else
                    {
                        if (_lst.Count() == 0)
                        {
                            <MudAlert Severity="Severity.Warning">Không có dữ liệu</MudAlert>
                        }
                        else
                        {
                            @foreach (var item in _lst)
                            {
                                <MudCarouselItem Transition="transition" Class="ml-3">
                                    <MudImage Src="@item.PosterURL" Style="width:97%;height:90%" Alt="Swedish Farm House" Elevation="25" Class="rounded-lg ma-4" />
                                </MudCarouselItem>
                            }
                        }
                    }
                </ChildContent>
            </MudCarousel>
            <MudText Align="Align.Center" Typo="Typo.h3" Class="mt-3" Style="color:#4B6886">Phim đang chiếu</MudText>
            <MudSpacer />
            <MudDivider />
            @if (_lst == null)
            {
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            }
            else
            {
                if (_lst.Count <= 0)
                {
                    <MudAlert Severity="Severity.Warning">Không có dữ liệu</MudAlert>
                }
                else
                {
                    <MudGrid Class="mt-4 ml-4 mb-5">
                        @foreach (var item in _lst)
                        {
                            @if (item.ReleaseDate.ToLocalTime().DayOfYear == DateTimeOffset.UtcNow.ToLocalTime().DayOfYear)
                            {
                                <MudItem xs="3" lg="3" md="3">
                                    <MudImage Src="@item.UrlImage" @onclick="OpenDialog" Style="width:70%;" Alt="Swedish Farm House" Elevation="25" Class="rounded-lg ma-4" />
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4">Tên Phim: @item.Title</MudText>
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4">Thời gian : @item.Duration phút</MudText>
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4">Ngày chiếu : @item.ReleaseDate.ToLocalTime().ToString("dd/MM/yyyy")</MudText>
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4">Thể loại : @item.Genres</MudText>
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4"><MudButton @onclick="() => Order(item.Id)" Variant="MudBlazor.Variant.Filled" Style="background-color:#083151;color:#F2FFFF" Class="mt-3">Đặt vé</MudButton> </MudText>
                                </MudItem>
                            }

                        }
                    </MudGrid>
                    <MudSpacer />
                    <MudDivider />
                    <MudText Align="Align.Center" Typo="Typo.h3" Style="color:#4B6886" Class="mt-3">Phim sắp chiếu</MudText>
                    <MudGrid Class="mt-4 ml-4">
                        @foreach (var item in _lst)
                        {
                            @if (item.ReleaseDate.ToLocalTime().DayOfYear > DateTimeOffset.UtcNow.ToLocalTime().DayOfYear)
                            {
                                <MudItem xs="3" lg="3" md="3">
                                    <MudImage Src="@item.UrlImage" Style="width:70%;" Alt="Swedish Farm House" Elevation="25" Class="rounded-lg ma-4" />
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4">Tên Phim: @item.Title</MudText>
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4">Thời gian : @item.Duration phút</MudText>
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4">Ngày chiếu : @item.ReleaseDate.ToLocalTime().ToString("dd/MM/yyyy")</MudText>
                                    <MudText Align="Align.Start" Style="color:#4B6886" Class="ml-4 mb-5">Thể loại : @item.Genres</MudText>
                                </MudItem>
                            }
                        }
                    </MudGrid>
                }
            }
        </MudContainer>
    </MudPaper>
}

@code {
    public string Search { get; set; }
    [CascadingParameter]
    public string SelectedDepartmentName { get; set; }

    [Parameter] public string customerId { get; set; }
    [Inject] public IFilmRepo _filmRepo { get; set; }
    public ViewFilmWithPaginationRequest obj = new();
    public List<Guid>? _lstFilmId { get; set; } = new();
    [Inject] public IDepartmentFilmRepo _departmentFilmRepo { get; set; }
    public ViewDepartmentFilmWithPaginationRequest _viewDepartmentFilmWithPaginationRequest = new() { PageSize = 50 };

    public ViewDepartmentWithPaginationRequest _viewDepartmentWithPaginationRequest = new() { PageSize = 50 };
    public List<FilmDto>? _lst { get; set; } = new();
    private void Order(Guid IdFilm)
    {
        // if (saveCustomerId.CustomerId == null)
        // {

        //     _snackbar.Add("Bạn cần đăng nhập để tiếp tục!", Severity.Warning);
        // }
        // else
        // {
        //     // Chuyển hướng đến trang đặt vé với thông tin phim
        //     NavigationManager.NavigateTo($"/booking/{departmentId}/{saveCustomerId.CustomerId}/{IdFilm}");
        // }

    }
    private void OpenDialog()
    {
        MudBlazor.DialogOptions closeOnEscapeKey = new MudBlazor.DialogOptions() { CloseOnEscapeKey = true };

        DialogService.Show<TrailerFilm>("Trailer phim", closeOnEscapeKey);
    }
    private bool arrows = true;
    private bool bullets = true;
    private bool enableSwipeGesture = true;
    private bool autocycle = true;
    private Transition transition = Transition.Slide;
    protected override async Task OnInitializedAsync()
    {
        await LoadFilmsByDepartment();
        await LoadListFilmByDepartment();
    }
    private async Task LoadFilmsByDepartment()
    {
        _viewDepartmentWithPaginationRequest.Name = SelectedDepartmentName;
        var result = await _filmRepo.GetFilmsByDepartmentName(_viewDepartmentWithPaginationRequest);
        _lstFilmId = result.Data.Data.Select(x => x.Id).ToList();
        // _viewDepartmentFilmWithPaginationRequest.DepartmentName = SelectedDepartmentName;
        // var result = await _departmentFilmRepo.GetAllActive(_viewDepartmentFilmWithPaginationRequest);
        // _lstFilmId = result.Data.Data.Select(x => x.FilmId).ToList();
    }
    private async Task LoadListFilmByDepartment()
    {
        foreach (var filmID in _lstFilmId.Distinct().ToList())
        {
            var result = await _filmRepo.GetByIdAsync(filmID);
            var film = result.Data;
            if (film != null)
                _lst.Add(film);
        }
    }
}